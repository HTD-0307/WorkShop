[
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/",
	"title": "Chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cần tạo một VPC có 2 subnet public / private. Sau đó tạo 1 EC2 Instance Linux nằm trong public subnet, 1 EC2 Instance Windows nằm trong private subnet.\nTổng quan kiến trúc sau khi các bạn hoàn tất bước này sẽ như sau:\nĐể tìm hiểu cách tạo các EC2 instance và VPC với public/private subnet các bạn có thể tham khảo bài lab :\nGiới thiệu về Amazon EC2 Làm việc với Amazon VPC Nội dung Tạo SNS Tạo DynamoDB Tạo Giả lập cảm biến "
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "AWS IoT Core là dịch vụ của Amazon Web Services (AWS) giúp kết nối các thiết bị IoT (Internet of Things) với đám mây, cho phép thu thập, xử lý và phân tích dữ liệu từ các thiết bị này. Dịch vụ này giúp bạn dễ dàng triển khai các ứng dụng IoT với khả năng mở rộng cao và độ tin cậy mạnh mẽ.\nVCác tính năng chính của AWS IoT Core bao gồm:\nHỗ trợ kết nối và quản lý hàng triệu thiết bị IoT, từ cảm biến, máy móc đến các thiết bị di động. Các thiết bị có thể gửi dữ liệu lên AWS IoT Core qua giao thức như MQTT (Message Queuing Telemetry Transport), HTTP, hoặc WebSocket. Dữ liệu sau đó có thể được xử lý và chuyển tiếp đến các dịch vụ AWS khác như AWS Lambda, DynamoDB, hoặc S3. Cung cấp khả năng quản lý các thiết bị từ việc định danh, bảo mật, cho đến việc bảo vệ dữ liệu. Hỗ trợ các cơ chế bảo mật mạnh mẽ như xác thực thiết bị, mã hóa dữ liệu từ thiết bị đến đám mây, và phân quyền truy cập cho người dùng và thiết bị. Có tính năng Rules Engine, cho phép bạn định nghĩa các quy tắc để chuyển tiếp dữ liệu đến các dịch vụ AWS khác (như AWS Lambda, S3, DynamoDB) dựa trên các điều kiện xác định trước. Có thể tích hợp dễ dàng với các dịch vụ khác như Amazon Kinesis, Amazon S3, Amazon DynamoDB, Amazon Lambda, và AWS Machine Learning để phân tích và xử lý dữ liệu. Nhờ vào các tính năng này, AWS IoT Core trở thành nền tảng lý tưởng cho việc xây dựng và triển khai các ứng dụng IoT quy mô lớn.\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Session Management",
	"tags": [],
	"description": "",
	"content": "Giám sát kho hàng thông minh với AWS IoT Core Tổng quan Trong bài lab này, bạn sẽ tìm hiểu các khái niệm cơ bản và thực hành về Amazon IoT. Thực hành tạo kết nối đến máy chủ public và máy chủ private trong VPC.\nNội dung Giới thiệu Các bước chuẩn bị Giả lập cảm biến Phát triển và Triển khai AWS Lambda Thiết lập AWS IoT Core Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.1-public-instance/",
	"title": "Tạo Lambda function",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị của dịch vụ Lambda. Click chọn Create Function. Tại trang Create function. Click chọn Author from scratch. Tại mục Function name điền ProcessInventoryData. Tại mục runtime chọn python 3.9. Tại mục Execution role chọn Use an existing role Tại mục Existing role chọn role đã tạo ở IAM lúc trước. Kéo xuống cuối trang chọn Create function "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.1-createsns/",
	"title": "Tạo SNS ",
	"tags": [],
	"description": "",
	"content": "Tạo SNS Truy cập giao diện quản trị dịch vụ SNS Click Topic. Click Create topic. Tại trang Create Topic. Tại mục Type chọn Standard. Tại mục Name điền : InventoryAlerts. Click Create Topic. Tạo Subscriptions Click Subscriptions "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rBạn cần tạo sẵn 1 giả lập cảm biến để thực hiện bài thực hành này.\nTrước khi triển khai AWS IoT Core, việc chuẩn bị kỹ lưỡng môi trường phát triển, công cụ hỗ trợ, và tài nguyên là bước quan trọng để đảm bảo hiệu quả và tiết kiệm chi phí.\nNội dung Chuẩn bị Tạo IAM Role "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.2-createdynamodb/",
	"title": "Tạo DynamoDB",
	"tags": [],
	"description": "",
	"content": "Tạo DynamoDB Truy cập Amazon DynamoDB Click Create table. Tại trang Create table. Tại mục Table name điền Inventory. Tại mục Subnet name điền ProductID. Tại mục Partition key điền Timestamp. Kéo xuống cuối trang , click Create table. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-createiamrole/",
	"title": "Tạo IAM Role",
	"tags": [],
	"description": "",
	"content": "Tạo IAM Role Trong bước này chúng ta sẽ tiến hành tạo IAM Role. Trong IAM Role này sẽ được gán policy Lambda, đây là policy cho phép Lambda thực thi các hoạt động trong dự án.\nTruy cập vào giao diện quản trị dịch vụ IAM Ở thanh điều hướng bên trái, click Roles. Click Create role. Click AWS service và click Lambda. Click Next. Trong ô Search, điền lần lượt AWSLambdaExecute, AmazonDynamoDBFullAccess, AmazonSNSFullAccess, AmazonS3FullAccess và ấn phím Enter để tìm kiếm policy này. Click chọn policy AWSLambdaExecute. Click chọn policy AmazonDynamoDBFullAccess. Click chọn policy AmazonSNSFullAccess. Click chọn policy AmazonS3FullAccess. Click Next Click Next=. Đặt tên cho Role là Lambda ở Role Name Click Create Role . Tiếp theo chúng ta sẽ cài đặt và triển khai Lambda.\n"
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.2-private-instance/",
	"title": "Viết code xử lý cho Lambda",
	"tags": [],
	"description": "",
	"content": "Để Lambda có thể xử lý dữ liệu nhận được từu IoT Core, chúng ta cần viết 1 hàm xử lý các tác vụ:lưu dữ liệu vào DynamoDB, gửi cảnh báo khi dữ lieuj vượt ngưỡng.\nTruy cập vào giao diện quản trị của dịch vụ Lambda. Click chọn Function. Click chọn function vừa tạo Khi mục ProcessInventoryData xuất hiện Chọn mục Code Dán đoạn code này: import boto3 import json dynamodb = boto3.resource(\u0026#39;dynamodb\u0026#39;) table = dynamodb.Table(\u0026#39;InventoryData\u0026#39;) sns = boto3.client(\u0026#39;sns\u0026#39;) def lambda_handler(event, context): print(\u0026#34;Received event:\u0026#34;, event) # Xử lý batch format từ IoT rule if \u0026#39;records\u0026#39; in event: for record in event[\u0026#39;records\u0026#39;]: try: payload = json.loads(record[\u0026#39;data\u0026#39;]) print(\u0026#34;Processing payload (batch):\u0026#34;, payload) process_data(payload) except Exception as e: print(\u0026#34;Error processing batch record:\u0026#34;, str(e)) # Xử lý single event (ví dụ từ script hoặc test) elif all(key in event for key in [\u0026#39;product_id\u0026#39;, \u0026#39;quantity\u0026#39;, \u0026#39;timestamp\u0026#39;]): print(\u0026#34;Processing single event:\u0026#34;, event) process_data(event) else: print(\u0026#34;Invalid event format, skipping\u0026#34;) return {\u0026#39;statusCode\u0026#39;: 200} def process_data(payload): product_id = payload[\u0026#39;product_id\u0026#39;] quantity = payload[\u0026#39;quantity\u0026#39;] timestamp = payload[\u0026#39;timestamp\u0026#39;] table.put_item(Item=payload) print(\u0026#34;Saved to DynamoDB:\u0026#34;, payload) if quantity \u0026lt; 10: sns.publish( TopicArn=\u0026#39;arn:aws:sns:us-east-1:922456364996:InventoryAlerts\u0026#39;, Message=f\u0026#34;Low inventory for {product_id}: {quantity} units\u0026#34; ) print(\u0026#34;Sent SNS alert\u0026#34;) Click Deploy để update cho Lambda "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/",
	"title": "Cài đặt và triển khai Lambda",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cài đặt cấu hình cho Lambda.\nNội dung 3.1. Tạo Lambda function 3.2. Tạo Kết nối đến máy chủ EC2 Private\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.3-createsimulateddevice/",
	"title": "Tạo Cảm biến giả lập",
	"tags": [],
	"description": "",
	"content": "Tạo Cảm biến giả lập Tải Python Cài đặt file .exe vừa tải về. Vào terminal nhập dòng lệnh: python \u0026ndash;verion Tải AWS Command Line Interface Chạy file cài đặt .msi Kiểm tra bằng lệnh: aws \u0026ndash;version Cấu Hình Tài Khoản AWS Vào AWS Management Console, vào dịch vụ IAM Click My security credentials Khi trang My security credentials xuất hiện, click Create access key. Khi trang Create access key xuất hiện: Click vào ô chọn I understand creating a root access key is not a best practice, but I still want to create one Click Create access key. Download file .csv về máy. Mở terminal, chạy lệnh aws configure: Nhập Access Key, Secret Key từ file .csv vừa tải Region: us-east-1 Output format: json Cài Đặt Thư Viện boto3 Mở terminal, cài đặt thư viện boto3 bằng lệnh: pip install boto3 "
},
{
	"uri": "//localhost:1313/vi/4-s3log/",
	"title": "Cấu hình AWS IoT Core",
	"tags": [],
	"description": "",
	"content": "Để có thể nhận được dữ liệu từ nguồn cảm biến tự động, chúng ta cần phải cài đặt cấu hình cho AWS IoT Core.\nTruy cập vào giao diện quản trị của dịch vụ AWS IoT Core. "
},
{
	"uri": "//localhost:1313/vi/5-portfwd/",
	"title": "Port Forwarding",
	"tags": [],
	"description": "",
	"content": "\rPort Forwarding là mốt cách thức hữu ích để chuyển hướng lưu lượng mạng từ 1 địa chỉ IP - Port này sang 1 địa chỉ IP - Port khác. Với Port Forwarding chúng ta có thể truy cập một EC2 instance nằm trong private subnet từ máy trạm của chúng ta.\nChúng ta sẽ cấu hình Port Forwarding cho kết nối RDP giữa máy của mình với Private Windows Instance nằm trong private subnet mà chúng ta đã tạo cho bài thực hành này.\nTạo IAM User có quyền kết nối SSM Truy cập vào giao diện quản trị dịch vụ IAM Click Users , sau đó click Add users. Tại trang Add user. Tại mục User name, điền Portfwd. Click chọn Access key - Programmatic access. Click Next: Permissions. Click Attach existing policies directly. Tại ô tìm kiếm , điền ssm. Click chọn AmazonSSMFullAccess. Click Next: Tags, click Next: Reviews. Click Create user. Lưu lại thông tin Access key ID và Secret access key để thực hiện cấu hình AWS CLI. Cài đặt và cấu hình AWS CLI và Session Manager Plugin Để thực hiện phần thực hành này, đảm bảo máy trạm của bạn đã cài AWS CLI và Session Manager Plugin\nBạn có thể tham khảo thêm bài thực hành về cài đặt và cấu hình AWS CLI tại đây.\nVới Windows thì khi giải nén thư mục cài đặt Session Manager Plugin bạn hãy chạy file install.bat với quyền Administrator để thực hiện cài đặt.\nThực hiện Portforwarding Chạy command dưới đây trong Command Prompt trên máy của bạn để cấu hình Port Forwarding. aws ssm start-session --target (your ID windows instance) --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region (your region) Thông tin Instance ID của Windows Private Instance có thể tìm được khi bạn xem chi tiết máy chủ EC2 Windows Private Instance.\nCâu lệnh ví dụ C:\\Windows\\system32\u0026gt;aws ssm start-session --target i-06343d7377486760c --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region ap-southeast-1 Nếu câu lệnh của bạn báo lỗi như dưới đây : SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found\nChứng tỏ bạn chưa cài Session Manager Plugin thành công. Bạn có thể cần khởi chạy lại Command Prompt sau khi cài Session Manager Plugin.\nKết nối tới Private Windows Instance bạn đã tạo bằng công cụ Remote Desktop trên máy trạm của bạn. Tại mục Computer: điền localhost:9999. Quay trở lại giao diện quản trị của dịch vụ System Manager - Session Manager. Click tab Session history. Chúng ta sẽ thấy các session logs với tên Document là AWS-StartPortForwardingSession. Chúc mừng bạn đã hoàn tất bài thực hành hướng dẫn cách sử dụng Session Manager để kết nối cũng như lưu trữ các session logs trong S3 bucket. Hãy nhớ thực hiện bước dọn dẹp tài nguyên để tránh sinh chi phí ngoài ý muốn nhé.\n"
},
{
	"uri": "//localhost:1313/vi/6-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EC2 instance Truy cập giao diện quản trị dịch vụ EC2 Click Instances. Click chọn cả 2 instance Public Linux Instance và Private Windows Instance. Click Instance state. Click Terminate instance, sau đó click Terminate để xác nhận. Truy cập giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click chọn SSM-Role. Click Delete, sau đó điền tên role SSM-Role và click Delete để xóa role. Click Users. Click chọn user Portfwd. Click Delete, sau đó điền tên user Portfwd và click Delete để xóa user. Xóa S3 bucket Truy cập giao diện quản trị dịch vụ System Manager - Session Manager. Click tab Preferences. Click Edit. Kéo chuột xuống dưới. Tại mục S3 logging. Bỏ chọn Enable để tắt tính năng logging. Kéo chuột xuống dưới. Click Save. Truy cập giao diện quản trị dịch vụ S3 Click chọn S3 bucket chúng ta đã tạo cho bài thực hành. ( Ví dụ : lab-fcj-bucket-0001 ) Click Empty. Điền permanently delete, sau đó click Empty để tiến hành xóa object trong bucket. Click Exit. Sau khi xóa hết object trong bucket, click Delete Điền tên S3 bucket, sau đó click Delete bucket để tiến hành xóa S3 bucket. Xóa các VPC Endpoint Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Chọn 4 endpoints chúng ta đã tạo cho bài thực hành bao gồm SSM, SSMMESSAGES, EC2MESSAGES, S3GW. Click Actions. Click Delete VPC endpoints. Tại ô confirm , điền delete. Click Delete để tiến hành xóa các endpoints. Click biểu tượng refresh, kiểm tra tất cả các endpoints đã bị xóa trước khi làm bước tiếp theo. Xóa VPC Truy cập vào giao diện quản trị dịch vụ VPC Click Your VPCs. Click chọn Lab VPC. Click Actions. Click Delete VPC. Tại ô confirm, điền delete để xác nhận, click Delete để thực hiện xóa Lab VPC và các tài nguyên liên quan. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]